"use strict";angular.module("googleTranslate1xAppInternal",["googleTranslate1xPreload"]),angular.module("googleTranslate1xApp",["googleTranslate1xAppInternal","ui.select","ngSanitize"]).config(function(){});try{angular.module("googleTranslate1xPreload")}catch(e){angular.module("googleTranslate1xPreload",[])}angular.module("googleTranslate1xPreload").run(["$templateCache",function(a){a.put("views/google-translate1x-app.html","<div class='container'>\n  <div class='translate-box'>\n    <h1>\n      Google Translate Client\n    </h1>\n    <h5 class='powered-by-google'>powered by GoogleÂ®</h5>\n    <translation-box name='abc'></translation-box>\n  </div>\n</div>\n")}]);try{angular.module("googleTranslate1xPreload")}catch(e){angular.module("googleTranslate1xPreload",[])}angular.module("googleTranslate1xPreload").run(["$templateCache",function(a){a.put("views/translation-box.html","<div>\n  <form name='$ctrl.translationForm' ng-submit='$ctrl.submit()'>\n    <div class='div'>\n      <div>\n        <span>Target Languages:</span>\n        <ui-select multiple ng-disabled='!$ctrl.getTargetLanguageOptions()' ng-model='$ctrl.targetLanguages' theme='bootstrap'>\n          <ui-select-match placeholder='Spanish, French, Bengali, ...'>\n            {{ $item.name }}\n          </ui-select-match>\n          <ui-select-choices repeat='targetLanguage.code as targetLanguage in $ctrl.getTargetLanguageOptions() | filter:$select.search'>\n            {{ targetLanguage.name }}\n          </ui-select-choices>\n        </ui-select>\n      </div>\n      <div class='translation-input'>\n        <div>Text</div>\n        <input autocomplete='off' name='input' ng-disabled='!$ctrl.getTargetLanguageOptions()' ng-model='$ctrl.input' placeholder=\"{{$ctrl.getTargetLanguageOptions() ? 'where is the bus stop?' : ''}}\">\n        <span>\n          <button ng-disabled='$ctrl.isLockSearch()' type='submit' value='Translate!'>\n            GO!\n          </button>\n        </span>\n        <span ng-if='$ctrl.isInProgress()'>\n          {{$ctrl.translationsDoneCounter()}} / {{$ctrl.targetLanguages.length}}\n        </span>\n      </div>\n      <div class='translation-error' ng-show='!!$ctrl.getLastError()'>{{ $ctrl.getLastError() }}</div>\n      <div class='did-you-mean' ng-if='$ctrl.showDidYouMean()'>\n        <span>Did you mean...</span>\n        <span>{{ $ctrl.didYouMean() }}</span>\n      </div>\n    </div>\n    <div class='output-languages'>\n      <div class='translation-results' ng-repeat='translationItem in $ctrl.getTranslations()'>\n        <div class='result-language'>{{translationItem.language}}</div>\n        <div class='result-value'>{{translationItem.translation}}</div>\n        <div class='result-transliteration'>{{translationItem.transliteration}}</div>\n      </div>\n    </div>\n  </form>\n</div>\n")}]);try{angular.module("wixAppTranslations")}catch(e){angular.module("wixAppTranslations",["pascalprecht.translate"])}angular.module("wixAppTranslations").config(["$translateProvider",function(a){var b={general:{YO:"Hello"}};a.translations("en",b),a.translations(b),a.preferredLanguage&&a.preferredLanguage("en")}]).value("preferredLanguage","en");var GoogleTranslate1xApp=function(){function a(){this.stubValue=!1}return a.prototype.getStub=function(){return this.stubValue},a}();angular.module("googleTranslate1xAppInternal").component("googleTranslate1xApp",{templateUrl:"views/google-translate1x-app.html",controller:GoogleTranslate1xApp,bindings:{name:"="}});var GoogleTranslateApi=function(){function a(a){this.$http=a,this.resolvedCounter=0}return a.$inject=["$http"],a.prototype.translate=function(a,b,c){var d=this,e={query:a,sourceLang:b,targetLang:c};return this.$http.post("/api/translate",e).then(function(a){return a.data}).then(function(a){return d.resolvedCounter++,console.log(a.extract),a.extract})},a.prototype.getLanguages=function(){return this.$http.get("/api/languages").then(function(a){return a.data})},a}();angular.module("googleTranslate1xAppInternal").service("googleTranslateApi",GoogleTranslateApi);var TranslationBox=function(){function a(a){this.translateManager=a,this.lastResult=[],this.targetLanguages=[]}return a.$inject=["translateManager"],a.prototype.getTranslations=function(){return this.lastResult},a.prototype.getTargetLanguageOptions=function(){return this.translateManager.getAllTargetLanguages()},a.prototype.getLastError=function(){return this.translateManager.getLastError()},a.prototype.isLockSearch=function(){return!this.input||0===this.targetLanguages.length||this.isInProgress()},a.prototype.showDidYouMean=function(){return null!==this.translateManager.getDidYouMeanFix()},a.prototype.didYouMean=function(){return this.translateManager.getDidYouMeanFix()},a.prototype.isInProgress=function(){return this.translateManager.isTranslationInProgress()},a.prototype.translationsDoneCounter=function(){return this.translateManager.translationsDoneCounter()},a.prototype.submit=function(){var a=this;this.lastResult=[];var b="auto";this.translateManager.translate(this.input,b,this.targetLanguages.filter(function(a){return a!==b})).then(function(b){a.lastResult=b})},a}();angular.module("googleTranslate1xAppInternal").component("translationBox",{templateUrl:"views/translation-box.html",controller:TranslationBox,bindings:{}});var TranslateManager=function(){function a(a,b){var c=this;this.googleTranslateApi=a,this.$q=b,this.sourceLanguages={auto:"Auto",en:"English",es:"Spanish",fr:"French"},this.didYouMean=null,this.translationInProgress=!1,this.lastError="",this.googleTranslateApi.getLanguages().then(function(a){c.targetLanguages=a})["catch"](function(a){c.lastError="Failed to retrieve languages. Please make sure server is up & running (or set enableMocks==true)"})}return a.$inject=["googleTranslateApi","$q"],a.prototype.getAllTargetLanguages=function(){return this.targetLanguages},a.prototype.getAllTargetLanguageCodes=function(){return _.map(this.targetLanguages,function(a){return a.code})},a.prototype.getDidYouMeanFix=function(){return this.didYouMean},a.prototype.getLastError=function(){return this.lastError},a.prototype.isTranslationInProgress=function(){return this.translationInProgress},a.prototype.translationsDoneCounter=function(){return this.googleTranslateApi.resolvedCounter-this.translationsCounterFreeze},a.prototype.translate=function(a,b,c){var d=this;this.didYouMean=null,this.translationInProgress=!0,this.lastError="",this.translationsCounterFreeze=this.googleTranslateApi.resolvedCounter;var e=c.map(function(c){return d.googleTranslateApi.translate(a,b,c)});return this.$q.all(e).then(function(b){return b[0].actualQuery!==a&&(d.didYouMean=b[0].actualQuery),d.translationInProgress=!1,c.map(function(a,c){return{language:d.langCodeToName(a),translation:b[c].translation,transliteration:b[c].transliteration}})})["catch"](function(a){return d.lastError=a.data.error,d.translationInProgress=!1,d.$q.reject(d.lastError)})},a.prototype.langCodeToName=function(a){return this.targetLanguages.find(function(b){return b.code===a}).name},a}();angular.module("googleTranslate1xAppInternal").service("translateManager",TranslateManager);